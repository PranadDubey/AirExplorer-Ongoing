// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$blog-primary: mat.define-palette(mat.$indigo-palette);
$blog-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$blog-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$blog-theme: mat.define-light-theme(
  (
    color: (
      primary: $blog-primary,
      accent: $blog-accent,
      warn: $blog-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($blog-theme);

* {
  margin: 0;
  box-sizing: border-box;
}

/* You can add global styles to this file, and also import other style files */
// @import "../node_modules/bootstrap/scss/functions";
// @import "../node_modules/bootstrap/scss/variables";
// @import "../node_modules/bootstrap/scss/variables-dark";
// @import "../node_modules/bootstrap/scss/maps";
// @import "../node_modules/bootstrap/scss/mixins";
// @import "../node_modules/bootstrap/scss/utilities";

// $all-colors: map-merge-multiple(
//   $blues,
//   $indigos,
//   $purples,
//   $pinks,
//   $reds,
//   $oranges,
//   $yellows,
//   $greens,
//   $teals,
//   $cyans
// );

// $utilities: map-merge(
//   $utilities,
//   (
//     "color":
//       map-merge(
//         map-get($utilities, "color"),
//         (
//           values:
//             map-merge(
//               map-get(map-get($utilities, "color"), "values"),
//               ($all-colors)
//             ),
//         )
//       ),
//     "background-color":
//       map-merge(
//         map-get($utilities, "background-color"),
//         (
//           values:
//             map-merge(
//               map-get(map-get($utilities, "background-color"), "values"),
//               ($all-colors)
//             ),
//         )
//       ),
//   )
// );

// @import "../node_modules/bootstrap/scss/utilities/api";
// @import "../node_modules/bootstrap/scss/bootstrap.scss";
// html, body { height: 100%; }
// body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

@font-face {
  font-family: airExplorerFont;
  src: url("Philosopher/Philosopher-Regular.ttf");
}
@font-face {
  font-family: airExplorerFontBold;
  src: url("Philosopher/Philosopher-Bold.ttf");
}
@font-face {
  font-family: airExplorerFontItalic;
  src: url("Philosopher/Philosopher-Italic.ttf");
}
@font-face {
  font-family: airExplorerFontBoldItalic;
  src: url("Philosopher/Philosopher-BoldItalic.ttf");
}
app-root {
  font-family: airExplorerFontBold;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
